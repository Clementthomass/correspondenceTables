% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classificationQC.R
\name{classificationQC}
\alias{classificationQC}
\title{Perform quality control on a classification}
\usage{
classificationQC(
  classification,
  lengths,
  fullHierarchy = TRUE,
  labelUniqueness = TRUE,
  labelHierarchy = TRUE,
  singleChildCode = NULL,
  sequencing = NULL,
  CSVout = NULL
)
}
\arguments{
\item{classification}{Either a dataframe or (the name of a) CSV file with two columns: the code ('codes') and labels ('labels') of the classification which is to be quality controlled. This argument is mandatory}

\item{lengths}{Either a dataframe or (the name of a) CSV file with(one line per hierarchical level) initial and last positions of the segment of the code specific to that level. The number of lines in this dataframe (CSV file) implicitly defines k the (number of hierarchical levels of the classification). This argument is mandatory.}

\item{fullHierarchy}{This parameter is used to indicate wheter to test that the classification is balanced. If the parameter \code{fullHierarchy} is set to \code{FALSE}, the function will check that every position at a lower level than 1 should have parents all the way up to level 1(i.e that there are no 'orphaned' positions. If it set to \code{TRUE}, it will additionally check that any position at a higher level than k should have children all the way down to level k.}

\item{labelUniqueness}{this parameter is used to indicate wheter that positions at the same hierarchical level have unique labels. If it set to \code{TRUE}, the compliance is checked; (and the ouptu dataframe_QC ducplicatesLabel is added to the list that is returned) positions with duplicate labels are marked as 1 in the "duplicateLabel" column, while positions with unique labels are marked as 0.}

\item{labelHierarchy}{It is used to ensure that the hierarchical structure of labels is respected. When set to \code{TRUE}, the function will check that single children have a label identical to the label of their parent and that if a position has a label identical to the label of one of its children, then that position should only have a single child.}

\item{singleChildCode}{It refers to a CSV file with specific formatting to define valid codes for each level. If this parameter is not \code{NULL}, then it checks compliance with coding rules for single children and non-single children, as provided in the CSV file.}

\item{sequencing}{It refers to a CSV file to define the admissible codes for multiple children at each level. If this parameter is not \code{NULL}, the function checks the sequencing of multiple children codes within each level, as provided in the CSV file.}

\item{CSVout}{The valid values are \code{NULL} means that the user don't need to write the parameters  \code{TRUE}. In both cases, the output will be returned as an R list. If the output should be saved as an CSV file, the argument should be set to \code{TRUE}. By default, no CSV file is produced.}
}
\value{
\code{classificationQC()} returns a list of data frames identifying possible cases violating the formatting requirements. The databases returned depend on the rules checked. The databases produced are:
- \code{QC_output}: The dataset includes all the original records in the classification.
   The "level" column refers to the hierarchical levels of each position.
   With k being the maximum number of levels of the classification, each code will be parsed into segment₁, segment₂, ..., segmentₖ (columns "segment1", "segment2", ...), and Code₁, Code₂, ..., Codeₖ (columns "Code1", "Code2", ...), with segmentᵢ and Codeᵢ corresponding to the segment and code at hierarchical level i, respectively.For records less granular than k, NA will be indicated for the more granular segments (as they will logically be absent) 
   Additional columns are included to flag the features (mainly compliance) of each positions:
  - \code{orphan}: If \code{fullHierarchy} is set to \code{FALSE}, an "orphan" is a position at a hierarchical level (j) greater than 1 that lacks a parent at the hierarchical level (j-1) immediately above it. Orphan positions are marked with a value of 1 in the "Orphan" column, indicating their orphan status;for all other positions are "Orphan" is assigned the value 0.
  - \code{childless}: If \code{fullHierarchy} is set to \code{TRUE}, a "childless" position is one at a hierarchical level (j) less than k that lacks a child at the hierarchical level (j+1) immediately below it. Childless positions are marked with a value of 1 in the "Childless" column, indicating their childless status;for all other positions, "childless" is set to 0.
  - \code{duplicateLabel}:A value of 1 indicates that the position is involved in a duplicate label situation (where multiple positions share the same label at the same hierarchical level), while positions with unique labels are assigned a value of 0.
  - \code{singleChildMismatch}: This column provides information about label hierarchy consistency in a hierarchical classification system as follows:
    - 1: Mismatched labels between a parent and its single child.
    - 9: Parent-child pairs with matching labels, but the parent has multiple children.
    - 0: Compliance with the label hierarchy rule, indicating no mismatches or violations.
  - \code{singleCodeError}: This column, included only if the singleChildCode parameter is not NULL, serves as a flag indicating whether a position is a single child while the level j segment is not among the admissible single single child codes (as indicated by the singleChildCode parameter). A value of 1 signifies non compliance, while a value of 0 indicates compliance with the coding rules.
  - \code{multipleCodeError}:This column, included only if the multipleChildCode parameter is not NULL,  serves as a flag indicating whether a position is not a single child while the level j segment is not among the admissible multiple child codes (as indicated by the multipleChildCode parameter). A value of 1 signifies non compliance, while a value of 0 indicates compliance with the coding rules.
  - \code{gapBefore}: The column is a binary (0/1) flag that indicates whether there is a gap before a specific code within its level in the hierarchy. A gap refers to the absence of a sibling code that should logically precede the given code(as indicated by the sequencing parameter). In other words, it checks if there is a missing code in the sequence before a particular code.
  - \code{lastSibling}: The "LastSibling" column is a binary (0/1) flag that identifies whether a code is the last sibling code at its level in the hierarchy. It is only relevant for codes with multiple children, meaning there are other codes at the same level with the same parent.

- \code{QC_noLevels}: A subset of the \code{QC_output} dataframe including only records for which levels are not defined. If this dataframe is not empty, it suggests that either the classification or the length file is not correctly specified.

- \code{QC_orphan}: A subset of the \code{QC_output} dataframe including only records that have no parents at the higher hierarchical level.

- \code{QC_childless}: A subset of the \code{QC_output} dataframe including only records that have no children at the lower hierarchical level.

- \code{QC_duplicatesLabel}: A subset of the \code{QC_output} dataframe including only records that have duplicated labels in the same hierarchical level.

- \code{QC_duplicatesCode}: A subset of the \code{QC_output} dataframe including only records that have the same codes.

- \code{QC_singleChildMismatch}: A subset of the \code{QC_output} dataframe including only records that are single children and have different labels from their parents or that are multiple children and have the same labels as their parents.

- \code{QC_singleCodeError}: A subset of the \code{QC_output} dataframe including only records that are single children and have been wrongly coded (not following the rule provided in the 'SingleChildMismatch' CSV file).

- \code{QC_multipleCodeError}: A subset of the \code{QC_output} dataframe including only records that are multiple children and have been wrongly coded (not following the rule provided in the 'SingleChildMismatch' CSV file).

- \code{QC_gapBefore}: A subset of the \code{QC_output} dataframe including only records that are multiple children and have a gap in the sequencing provided in the 'sequencing' CSV file.

- \code{QC_lastSibling}: A subset of the \code{QC_output} dataframe including only records that are multiple children and are the last sibling following the sequencing provided in the 'sequencing' CSV file.
}
\description{
Perform quality control on a classification
}
\examples{
{
  classification <- system.file("extdata", "Nace2.csv",
    package = "correspondenceTables")
  lengths <- system.file("extdata", "lenghtsNace.csv",
    package = "correspondenceTables")
  CSVout <- system.file("extdata", "QC_Output.csv",
    package = "correspondenceTables")

  Output <- classificationQC(
    classification = classification,
    lengths = lengths,
    fullHierarchy = TRUE,
    labelUniqueness  = TRUE,
    labelHierarchy = TRUE,
    singleChildCode = NULL,
    sequencing = NULL,
    CSVout = CSVout
  )

  print(Output$QC_output)
  print(Output$QC_noLevels)
  print(Output$QC_orphan)
  print(Output$QC_childless)
  print(Output$QC_duplicatesLabel)
  print(Output$QC_duplicatesCode)
  print(Output$QC_singleChildMismatch)
  print(Output$QC_singleCodeError)
  print(Output$QC_multipleCodeError)
  print(Output$QC_gapBefore)
  print(Output$QC_lastSibling)
}
}
